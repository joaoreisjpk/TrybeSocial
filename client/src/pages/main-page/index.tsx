import { GetServerSideProps } from 'next';
import Head from 'next/head';
import React from 'react';
import Header from '../../components/Header';
import { fetchRefreshToken } from '../../helpers/fetchers';
import JWT, { encrypt, decrypt, getTokenId } from '../../helpers/Encrypt';
import { useAuth } from '../../hooks/useAuth';
import { CookieAt, CookieRt } from '../../helpers/cookie';

export default function MainPage(props: { email: string }) {
  const { email, setEmail } = useAuth();
  if (email === '') { setEmail(props.email); console.log('email = ""'); };

  return (
    <div>
      <Head>
        <title>Main Page - Trybe Social</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Header />
      <h1>Main Page</h1>
      <h2>Você está logado com o email: {email}</h2>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async ({ req }) => {
  const { tokenAt, tokenRt: RtCrypted } = req.cookies;
  let AtCrypted = tokenAt ? decrypt(tokenAt) : undefined;
  
  if (!RtCrypted) {
    return {
      props: {},
      redirect: {
        destination: '/login',
        permanent: false,
      },
    };
  }

  const tokenRt = decrypt(RtCrypted);
  const jwt = new JWT();

  if (!AtCrypted) {
    const userId = getTokenId(jwt.verify(tokenRt) as string);
    const { acess_token, refresh_token, error } = await fetchRefreshToken(
      tokenRt,
      userId
    );
    console.log({ userId, acess_token, refresh_token, error });
    

    if (error) {
      CookieRt.remove('tokenRt');
      return {
        props: {},
        redirect: {
          destination: '/login',
          permanent: false,
        },
      };
    }

    CookieRt.set('tokenRt', encrypt(refresh_token as string));
    CookieAt.set('tokenAt', encrypt(acess_token as string));
    AtCrypted = acess_token as string;
  }
  console.log({ OK: AtCrypted });
  
  const { email } = jwt.decode(AtCrypted) as { email: string };

  return {
    props: { email },
  };
};
